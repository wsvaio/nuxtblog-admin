user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
  worker_connections 1024;
}


http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';


  access_log /var/log/nginx/access.log main;

  sendfile on;
  #tcp_nopush     on;


  keepalive_timeout 65;

  gzip  on; #是否开启gzip
  # gzip_buffers 32 4K; #缓冲(压缩在内存中缓冲几块? 每块多大?)
  # gzip_comp_level 6; #推荐6 压缩级别(级别越高,压的越小,越浪费CPU计算资源)
  # gzip_disable "MSIE [1-6]\."; #正则匹配UA 什么样的Uri不进行gzip
  # gzip_min_length 100; # 开始压缩的最小长度(再小就不要压缩了,意义不在)
  # gzip_http_version 1.1; # 开始压缩的http协议版本(可以不设置,目前几乎全是1.1协议)
  # gzip_proxied # 设置请求者代理服务器,该如何缓存内容
  # gzip_types application/javascript text/css text/xml text/plain; # 对哪些类型的文件用压缩 如txt,xml,html ,css
  # gzip_vary on; # 是否传输gzip压缩标志

  #限制请求体最大大小
  client_max_body_size 1024m;

  # include /etc/nginx/conf.d/*.conf;

  server {
    listen 7101;
    server_name localhost;
    absolute_redirect off;

    # location ^~ /admin/api {
    #   proxy_pass https://wsvaio.site/api;
    # }

    location /admin {
      alias /usr/share/nginx/html;
      try_files $uri $uri/ /admin/index.html;
      index index.html;
    }


  }

}
